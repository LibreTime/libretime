<div id="content" class="jp-container">
    <h1><?php echo _("Live stream") ?></h1>
    <!-- <a id="popup-link" href="#"><?php echo _("Share") ?></a>  -->
    <?php $ids = Application_Model_StreamSetting::getEnabledStreamIds(); ?>
    <div class="jp-logo"><img id="logo-img" onload='resizeToMaxHeight(this, 40);' src="<?php echo $this->logo ?>" /></div>

    <div class="jp-stream stream-player-label">
        <div class="jp-stream-text"><?php echo _("Select stream:"); ?></div>
            
        <form id="form1" method="post" action="">
        <select id="combo-box">
            <?php
                foreach($ids as $id) {
                    $streamData = Application_Model_StreamSetting::getStreamData($id);
                    $url = "http://".$streamData["${id}_host"].":".$streamData["${id}_port"]."/".$streamData["${id}_mount"];
                    $type = $streamData["${id}_type"];
                    $serverType = $streamData["${id}_output"];
                    // if ($type == "ogg")
                    //     $type = "oga";
                    if ($serverType == "shoutcast"){
                        $url = $url + ";stream/1";
                    }

                    $label = "(".$streamData["${id}_host"].") ".$streamData["${id}_description"]." - ".$streamData["${id}_bitrate"]." kbit/s";
                    echo sprintf("<option class='stream' value='%s'>%s</option>", $url, $label);
                }
            ?>
        </select>
        </form>
    </div>

    <div id="jp_container_1" class="jp-audio">
        <div class="jp-type-single">
            <div id="jp_interface_1" class="jp-gui jp-interface">
                <div class="sp-controls" style="top:19%; left:45%; position:absolute;">
                    <button id="sp-mute" class="btn btn-link hidden">
                        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="white" class="bi bi-stop-fill" viewBox="0 0 16 16">
                        <path d="M5 3.5h6A1.5 1.5 0 0 1 12.5 5v6a1.5 1.5 0 0 1-1.5 1.5H5A1.5 1.5 0 0 1 3.5 11V5A1.5 1.5 0 0 1 5 3.5z"/>
                        </svg>
                    </button>
                    <button id="sp-unmute" class="btn btn-link">
                        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="white" class="bi bi-play-fill" viewBox="0 0 16 16">
                        <path d="M11.596 8.697l-6.363 3.692c-.54.313-1.233-.066-1.233-.697V4.308c0-.63.692-1.01 1.233-.696l6.363 3.692a.802.802 0 0 1 0 1.393z"/>
                        </svg>
                    </button>
                </div>
            </div>
        </div>
    </div>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/howler/2.2.1/howler.js"></script>
    <!-- <script src="/js/libs/howler.js"></script> -->
    <script>
        // Pull first stream
        let streamURLs;
        <?php
            if (count($ids) > 0){
                $id = $ids[0];
                $streamData = Application_Model_StreamSetting::getStreamData($id);
                $url = "http://".$streamData["${id}_host"].":".$streamData["${id}_port"]."/".$streamData["${id}_mount"];
                $type = $streamData["${id}_type"];
                $serverType = $streamData["${id}_output"];
                // if ($type == "ogg")
                //     $type = "oga";
                if ($serverType == "shoutcast")
                    $url = $url + ";stream/1";
                echo "streamURLs = ['$url'];";
            }
        ?>

        var streamPlayer = new Howl({
            src: streamURLs,
            html5: true,
            format: ['ogg', 'mp3', 'opus', 'aac'],
            volume: 0.5
        });

        // Track changes in #combo-box
        var selectedStream = document.getElementById('combo-box');
        selectedStream.onchange = function() {
            sel = selectedStream.options[selectedStream.selectedIndex];
            // Check to see if new stream URL is different:
            // Do nothing if same, change to new stream if different.
            if (sel.value === streamPlayer.src) {
                return false
            } else {
                streamPlayer.stop();
                streamPlayer.src = sel.value;
                streamPlayer.play();
                console.log('Player changed to ' + sel.value);
            }
        }

        // Button setup
        const setMuteBtn = document.querySelector('#sp-mute');
        const setUnmuteBtn = document.querySelector('#sp-unmute');

        setMuteBtn.addEventListener('click', (event) => {
            document.getElementById('sp-unmute').classList.remove('hidden');
            document.getElementById('sp-mute').classList.add('hidden');
            streamPlayer.stop();
            console.log('Stopped player');
        });
        setUnmuteBtn.addEventListener('click', (event) => {
            document.getElementById('sp-unmute').classList.add('hidden');
            document.getElementById('sp-mute').classList.remove('hidden');
            streamPlayer.play();
            console.log('Started player');
        });

        // Copying stream URL to clipboard [WIP]
        const shareBtn = document.getElementById('popup-link');
        shareBtn.addEventListener('click', (event) => {
            console.log(shareBtn.value);
        });
        
    </script>
</div>