name: Tests Python

on:
  push:
    branches: [master]
    paths-ignore: ["docs/**"]
  pull_request:
    branches: [master]
    types: [opened, reopened, synchronize, edited]
    paths-ignore: ["docs/**"]
  workflow_dispatch:

jobs:
  test:
    strategy:
      matrix:
        # TODO: Enable ubuntu-20.04
        # runs-on: [ubuntu-16.04, ubuntu-18.04, ubuntu-20.04]
        runs-on: [ubuntu-16.04, ubuntu-18.04]
        python-version: ["3.7"]

    runs-on: ${{ matrix.runs-on }}

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      # TODO: Extract apt dependencies in dependencies manager
      #       and only install for analyzer
      - name: Install dependencies
        run: |
          if [[ "${{ matrix.runs-on }}" ==  "ubuntu-16.04" \
             || "${{ matrix.runs-on }}" ==  "ubuntu-18.04"  ]]; then
            sudo add-apt-repository -y ppa:libretime/libretime
          fi
          sudo apt-get -q update
          sudo apt-get install -y \
            gstreamer1.0-plugins-base \
            gstreamer1.0-plugins-good \
            gstreamer1.0-plugins-bad \
            gstreamer1.0-plugins-ugly \
            libgirepository1.0-dev \
            liquidsoap \
            liquidsoap-plugin-faad \
            liquidsoap-plugin-lame \
            liquidsoap-plugin-mad \
            liquidsoap-plugin-vorbis \
            python3-gst-1.0 \
            silan \
            gcc \
            gir1.2-gtk-3.0 \
            python3-setuptools \
            python3-gi \
            python3-gi-cairo \
            python-cairo \
            pkg-config \
            libcairo2-dev

          for app in airtime_analyzer api_clients; do
            pip3 install -r "python_apps/$app/requirements-dev.txt"
            pip3 install -e "python_apps/$app"
          done

      - name: Run airtime_analyzer tests
        run: make -C python_apps/airtime_analyzer test

      - name: Run api_clients tests
        run: make -C python_apps/api_clients test

  # TODO: Setup testing for other distribution inside docker images.
  # test-in-container:
  #   strategy:
  #     matrix:
  #       container:
  #         # - "ubuntu:xenial" # ubuntu 16.04
  #         # - "ubuntu:bionic" # ubuntu 18.04
  #         - "ubuntu:focal" # ubuntu  20.04
  #         - "debian:buster" # debian 10
  #         - "debian:bullseye" # debian 11
  #   runs-on: ubuntu-latest
  #   container: ${{ matrix.container }}
